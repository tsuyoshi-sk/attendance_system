name: Poetry CI/CD

on:
  push:
    branches: [ main, feature/integration-hub ]
  pull_request:
    branches: [ main ]

jobs:
  poetry-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1  # 安定版を使用
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          .venv
        key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-${{ matrix.python-version }}-
          poetry-${{ runner.os }}-
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Check poetry.lock is up to date
      run: |
        poetry lock --check
    
    - name: Run tests with Poetry
      run: |
        poetry run python -m pytest tests/ -v -m "not slow" --cov=src/attendance_system --cov-report=xml --tb=short
      env:
        SECRET_KEY: test-secret-key-must-be-at-least-64-characters-long-for-comprehensive-testing-extended-version-complete
        JWT_SECRET_KEY: test-jwt-secret-must-be-at-least-64-characters-long-for-comprehensive-testing-extended-version-complete
        IDM_HASH_SECRET: test-idm-hash-secret-must-be-at-least-64-characters-long-for-comprehensive-testing-extended-version
    
    - name: Code formatting check with Black
      run: |
        poetry run black --check src/ tests/ || poetry run black --version
      continue-on-error: true  # Blackチェックは警告として扱う
    
    - name: Linting check
      run: |
        poetry run flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503
    
    - name: Type checking
      run: |
        poetry run mypy src/attendance_system/
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella